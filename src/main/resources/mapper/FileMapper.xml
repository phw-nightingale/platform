<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.giit.platform.dao.FileMapper" >
  <resultMap id="BaseResultMap" type="cn.giit.platform.entity.File" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="delete_user" property="deleteUser" jdbcType="VARCHAR" />
    <result column="delete_user_id" property="deleteUserId" jdbcType="INTEGER" />
    <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="str1" property="str1" jdbcType="VARCHAR" />
    <result column="str2" property="str2" jdbcType="VARCHAR" />
    <result column="str3" property="str3" jdbcType="VARCHAR" />
    <result column="str4" property="str4" jdbcType="VARCHAR" />
    <result column="str5" property="str5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Table_Name">
    sys_file
  </sql>
  <sql id="Base_Column_List" >
    id, url, path, type, size, filename, create_time, create_user, create_user_id, update_time, 
    update_user, update_user_id, delete_time, delete_user, delete_user_id, is_enable, 
    remark, str1, str2, str3, str4, str5
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.giit.platform.entity.File" useGeneratedKeys="true" keyProperty="id">
    insert into sys_file (id, url, path, 
      type, size, filename, 
      create_time, create_user, create_user_id, 
      update_time, update_user, update_user_id, 
      delete_time, delete_user, delete_user_id, 
      is_enable, remark, str1, 
      str2, str3, str4, str5
      )
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateUserId,jdbcType=INTEGER}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{deleteUser,jdbcType=VARCHAR}, #{deleteUserId,jdbcType=INTEGER}, 
      #{isEnable,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{str1,jdbcType=VARCHAR}, 
      #{str2,jdbcType=VARCHAR}, #{str3,jdbcType=VARCHAR}, #{str4,jdbcType=VARCHAR}, #{str5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.giit.platform.entity.File" useGeneratedKeys="true" keyProperty="id">
    insert into sys_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="deleteUser != null" >
        delete_user,
      </if>
      <if test="deleteUserId != null" >
        delete_user_id,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="str1 != null" >
        str1,
      </if>
      <if test="str2 != null" >
        str2,
      </if>
      <if test="str3 != null" >
        str3,
      </if>
      <if test="str4 != null" >
        str4,
      </if>
      <if test="str5 != null" >
        str5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null" >
        #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteUserId != null" >
        #{deleteUserId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="str1 != null" >
        #{str1,jdbcType=VARCHAR},
      </if>
      <if test="str2 != null" >
        #{str2,jdbcType=VARCHAR},
      </if>
      <if test="str3 != null" >
        #{str3,jdbcType=VARCHAR},
      </if>
      <if test="str4 != null" >
        #{str4,jdbcType=VARCHAR},
      </if>
      <if test="str5 != null" >
        #{str5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.giit.platform.entity.File" >
    update sys_file
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteUser != null" >
        delete_user = #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteUserId != null" >
        delete_user_id = #{deleteUserId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="str1 != null" >
        str1 = #{str1,jdbcType=VARCHAR},
      </if>
      <if test="str2 != null" >
        str2 = #{str2,jdbcType=VARCHAR},
      </if>
      <if test="str3 != null" >
        str3 = #{str3,jdbcType=VARCHAR},
      </if>
      <if test="str4 != null" >
        str4 = #{str4,jdbcType=VARCHAR},
      </if>
      <if test="str5 != null" >
        str5 = #{str5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.giit.platform.entity.File" >
    update sys_file
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      size = #{size,jdbcType=INTEGER},
      filename = #{filename,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      delete_user = #{deleteUser,jdbcType=VARCHAR},
      delete_user_id = #{deleteUserId,jdbcType=INTEGER},
      is_enable = #{isEnable,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      str1 = #{str1,jdbcType=VARCHAR},
      str2 = #{str2,jdbcType=VARCHAR},
      str3 = #{str3,jdbcType=VARCHAR},
      str4 = #{str4,jdbcType=VARCHAR},
      str5 = #{str5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- Custom Basic SQL Statement -->
  <select id="load" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    where
    ${unique} = #{value}
  </select>
  <delete id="deleteByConditions" parameterType="java.util.Map">
    delete from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} = #{value}
      </foreach>
    </where>
  </delete>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
  </select>

  <select id="selectAllOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    order by ${orderBy}
  </select>

  <select id="selectAllOrderAndSort" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    order by ${orderBy} ${sort}
  </select>

  <update id="updateByConditions" parameterType="java.util.Map">
    update
    <include refid="Base_Column_List"/>
    <set>
      <foreach collection="entry" index="key" item="value" separator=",">
        ${key} = #{value}
      </foreach>
    </set>
    <where>
      <foreach collection="conditions" index="key" item="value" separator="and">
        ${key} = #{value}
      </foreach>
    </where>
  </update>

  <select id="selectByConditions" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} = #{value}
      </foreach>
    </where>
  </select>

  <select id="selectByConditionsOrder" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} = #{value}
      </foreach>
    </where>
    order by ${orderBy}
  </select>

  <select id="selectByConditionsOrderAndSort" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} = #{value}
      </foreach>
    </where>
    order by ${orderBy} ${sort}
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select count(*) from
    <include refid="Base_Table_Name"/>
  </select>

  <select id="selectCountByConditions" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} = #{value}
      </foreach>
    </where>
  </select>

  <select id="selectLike" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} like "%"#{value}"%"
      </foreach>
    </where>
  </select>

  <select id="selectLikeOrder" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} like "%"#{value}"%"
      </foreach>
    </where>
    order by ${orderBy}
  </select>

  <select id="selectLikeOrderAndSort" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Base_Table_Name"/>
    <where>
      <foreach collection="map" index="key" item="value" separator="and">
        ${key} like "%"#{value}"%"
      </foreach>
    </where>
    order by ${orderBy} ${sort}
  </select>
</mapper>